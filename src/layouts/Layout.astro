---
import { config } from '../config';
import type { Website, MediaAsset, NavMenuItem, NavLinkGroup } from '../services/cms';

interface Props {
  title?: string;
  description?: string;
  websiteData?: Website | null;
  currentLocale?: string;
}

const { title, description, websiteData, currentLocale } = Astro.props as Props;
const siteName = websiteData?.header?.brandDisplayName || websiteData?.name || 'Astro Site';
const pageTitle = title ? `${title} | ${siteName}` : siteName;
const activeLocale = currentLocale || websiteData?.locale || websiteData?.defaultLocale || 'en';

function resolveAssetUrl(path?: string | null) {
  if (!path) return null;
  if (path.startsWith('http')) return path;
  if (!config.cmsUrl) {
    console.warn('Missing CMS_URL env. Returning relative asset path for logo/favicon.');
    return path;
  }
  const normalizedBase = config.cmsUrl.replace(/\/$/, '');
  return `${normalizedBase}${path}`;
}

function getAssetUrl(media?: MediaAsset | null) {
  if (!media) return null;
  return media.fullUrl || resolveAssetUrl(media.url);
}
const currentYear = new Date().getFullYear();

function createVarStyle(map: Record<string, string | undefined>, context: string): string {
  const segments: string[] = [];
  const missing: string[] = [];

  for (const [key, value] of Object.entries(map)) {
    if (!value) {
      missing.push(key);
      continue;
    }
    segments.push(`--${key}: ${value};`);
  }

  if (missing.length > 0) {
    console.warn(`Missing brand color values for ${missing.join(', ')} in ${context}. Update the CMS ${context} configuration to keep the layout in sync.`);
  }

  return segments.join(' ');
}

if (!websiteData?.theme) {
  console.warn('No theme palette found in CMS response. Layout styling will fall back to browser defaults until values are provided.');
}

const themePalette = websiteData?.theme?.palette;
const brandStyles = createVarStyle(
  {
    'brand-primary': websiteData?.theme?.brandColor || themePalette?.primary,
    'brand-secondary': themePalette?.secondary,
    'brand-background': themePalette?.background,
    'brand-text': themePalette?.neutral || themePalette?.muted,
  },
  'theme.palette'
);

const logoAsset = websiteData?.brand?.logo ?? null;
const faviconAsset = websiteData?.brand?.favicon ?? null;
const logoUrl = getAssetUrl(logoAsset);
const faviconUrl = getAssetUrl(faviconAsset) || '/favicon.svg';
const metaDescription = description ?? websiteData?.seoDefaults?.metaDescription || 'Astro description';
const footerContent = websiteData?.footer;
const footerLinkGroups: NavLinkGroup[] = footerContent?.linkGroups ?? [];

function resolveFooterHref(item: NavMenuItem, locale: string): string {
  if (item.linkType === 'external_url') {
    return item.url || '#';
  }

  const path = item.path ? (item.path.startsWith('/') ? item.path : `/${item.path}`) : '';
  const localized = `/${locale}${path}`;
  return localized.replace(/\/+$/, '') || `/${locale}`;
}
---

<!doctype html>
<html lang={activeLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={metaDescription} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href={faviconUrl} />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <style>
      :root {
        color-scheme: light;
      }
      body {
        font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, sans-serif;
        margin: 0;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        background: var(--brand-background, #f8fafc);
        color: var(--brand-text, #1f2937);
      }
      .page-main {
        flex: 1 0 auto;
      }
      .site-footer {
        background: var(--brand-primary);
        color: var(--brand-text);
        padding: 3rem 1.5rem;
      }
      .footer-inner {
        max-width: 960px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
      }
      .footer-brand {
        display: flex;
        align-items: center;
        gap: 1rem;
      }
      .footer-logo {
        height: 36px;
        width: auto;
        flex-shrink: 0;
      }
      .footer-brand-copy {
        display: flex;
        flex-direction: column;
        gap: 0.35rem;
      }
      .footer-brand-copy strong {
        font-size: 1.15rem;
        line-height: 1.1;
      }
      .footer-about {
        margin: 0;
        font-size: 0.92rem;
        color: var(--brand-text);
        opacity: 0.8;
        max-width: 540px;
      }
      .footer-links {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
        gap: 1.5rem;
      }
      .footer-link-column strong {
        display: block;
        margin-bottom: 0.35rem;
        font-size: 0.95rem;
      }
      .footer-link-column ul {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        gap: 0.4rem;
      }
      .footer-link-column a {
        color: var(--brand-text);
        opacity: 0.85;
        text-decoration: none;
        font-size: 0.85rem;
        transition: opacity 0.2s ease;
      }
      .footer-link-column a:hover {
        opacity: 1;
      }
      .footer-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        font-size: 0.85rem;
        color: var(--brand-text);
        opacity: 0.75;
        border-top: 1px solid currentColor;
        padding-top: 1.5rem;
      }
    </style>
  </head>
  <body style={brandStyles || undefined}>
    <main class="page-main">
      <slot />
    </main>
    <footer class="site-footer">
      <div class="footer-inner">
        <div class="footer-brand">
          {logoUrl && (
            <img src={logoUrl} alt={logoAsset?.alternativeText || `${siteName} logo`} class="footer-logo" loading="lazy" />
          )}
          <div class="footer-brand-copy">
            <strong>{siteName}</strong>
            {footerContent?.aboutText && (
              <div class="footer-about" set:html={footerContent.aboutText}></div>
            )}
          </div>
        </div>
        {footerLinkGroups.length > 0 && (
          <div class="footer-links">
            {footerLinkGroups.map((group) => (
              <div class="footer-link-column">
                {group.groupTitle && <strong>{group.groupTitle}</strong>}
                {group.links.length > 0 && (
                  <ul>
                    {group.links.map((link) => {
                      const href = resolveFooterHref(link, activeLocale);
                      const isExternal = link.linkType === 'external_url';
                      const openInNewTab = Boolean(link.openInNewTab || isExternal);
                      return (
                        <li>
                          <a
                            href={href}
                            target={openInNewTab ? '_blank' : undefined}
                            rel={openInNewTab ? 'noopener noreferrer' : undefined}
                          >
                            {link.label}
                          </a>
                        </li>
                      );
                    })}
                  </ul>
                )}
              </div>
            ))}
          </div>
        )}
        <div class="footer-meta">
          <span>{footerContent?.copyrightText || `Â© ${currentYear} ${siteName}. All rights reserved.`}</span>
        </div>
      </div>
    </footer>
  </body>
</html>
