---
interface Props {
  title: string;
  tagline?: string;
  backgroundUrl?: string | null;
  primaryColor: string;
  secondaryColor: string;
  ctaLabel: string;
  ctaHref: string;
  srText?: string;
}

const {
  title,
  tagline,
  backgroundUrl,
  primaryColor,
  secondaryColor,
  ctaLabel,
  ctaHref,
  srText,
} = Astro.props as Props;

const backgroundLayers = backgroundUrl
  ? `linear-gradient(135deg, rgba(17, 24, 39, 0.72), rgba(17, 24, 39, 0.55)), url('${backgroundUrl}')`
  : `linear-gradient(135deg, ${primaryColor}, ${secondaryColor})`;
---

<section class="hero" style={`background-image: ${backgroundLayers};`}>
  {backgroundUrl && srText && <span class="sr-only">{srText}</span>}
  <div class="hero-content">
    <h1>{title}</h1>
    {tagline && <p>{tagline}</p>}
    <div class="hero-buttons">
      <a href={ctaHref} class="btn-hero btn-primary">
        {ctaLabel}
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="m9 18 6-6-6-6" />
        </svg>
      </a>
    </div>
  </div>
</section>

<style define:vars={{ primary: primaryColor, secondary: secondaryColor }}>
  .hero {
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    min-height: 60vh;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: white;
    position: relative;
    width: 100%;
    box-sizing: border-box;
  }

  .hero-content {
    max-width: 640px;
    padding: 2rem;
  }

  .hero h1 {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 700;
    margin-bottom: 1.5rem;
    line-height: 1.15;
  }

  .hero p {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    opacity: 0.9;
    line-height: 1.6;
  }

  .hero-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn-hero {
    padding: 0.85rem 2rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .btn-primary {
    background: var(--primary, #ff6b35);
    color: white;
  }

  .btn-hero:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  @media (max-width: 768px) {
    .hero {
      min-height: 50vh;
    }

    .btn-hero {
      width: 100%;
      max-width: 280px;
      justify-content: center;
    }
  }
</style>
